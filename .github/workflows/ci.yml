# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [refactor]

# jobs:
#   build:
#     name: Code Coverage run for ${{ matrix.python-version }} on ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ ubuntu-latest ]
#         python-version: [ 3.6, 3.7, 3.8, 3.9 ]

#     steps:
#       - uses: actions/checkout@v2
#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Install Python dependencies
#         run: |
#           python -m pip install --upgrade pip
#           python -m pip install numpy flake8 pytest pytest-cov setuptools wheel          
#       - name: Install pymwalib
#         run: |
#           python -m pip install .
#       - name: Lint with flake8
#         run: |
#           # stop the build if there are Python syntax errors or undefined names
#           flake8 src/pymwalib --count --select=E9,F63,F7,F82 --show-source --statistics
#           # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#           flake8 src/pymwalib --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#       - name: Test with pytest
#         run: |
#           python -m pytest --cov-report xml --cov=pymwalib tests/
#       - uses: codecov/codecov-action@v1
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
#           fail_ci_if_error: true # optional (default = false)
#           verbose: true # optional (default = false)

jobs:
  test:
    runs-on: ubuntu-latest
    container: python:3.10

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev
        env:
          POSTGRES_HOST: postgres
      - name: Run tests
        run: |
          cd src
          pytest